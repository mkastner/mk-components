import uuid from 'uuid/v4';

function Component(appContext, options) {

    if (!options) {
        throw new Error('options not provided.');
    }

    if (!options.template) {
        throw new Error('options.template not provided.');
    }

    if (!options.viewContext) {
        throw new Error('options.viewContext not provided.');
    }

    if (!options.viewContext.controller) {
        throw new Error('options.viewContext.controller not provided.');
    }

    options.viewContext.id = uuid();

    let view = appContext.rivets.bind(options.template, options.viewContext);

    let properties = {
        id: {
            value: options.viewContext.id
        },
        template: {
            // the template generated by rivets
            enumerable: false,
            writable: true,
            value: options.template
        },
        viewContext: {
            enumerable: false,
            writable: true,
            value: options.viewContext
        },
        // shortcut property, controller could also be called
        // via viewContext controller
        controller: {
            enumerable: false,
            writable: true,
            value: options.viewContext.controller
        },
        afterAppend: {
            enumerable: false,
            writable: true,
            value: function() {
                // overwrite this when appending sub components
            }
        },
        beforeRemove: {
            enumerable: false,
            writable: true,
            value: function() {
                // overwrite this when removing sub components
            }
        },
        view: {
            // the rivets view
            enumerable: false,
            writable: true,
            value: view
        }
    };

    function appendTo(parentNode) {

        parentNode.appendChild(this.template);

        let appendedNode = document.getElementById(this.id);

        if (!appendedNode) {
            console.error('check in', parentNode.innerHTML);
            throw new Error('appendendNode was not found by id. Was id-Tag set?');
        }

        this.afterAppend(appendedNode);

    }

    function remove() {
        this.beforeRemove();
        this.view.unbind();
        let node = document.getElementById(this.id);

        node.parentNode.removeChild(node);

        options.viewContext.controller.event.removeAllEventListeners();
    }

    let prototype = {
        appendTo,
        remove
    };

    let component = Object.create(prototype, properties);

    return component;

}

export { Component, Controller };
